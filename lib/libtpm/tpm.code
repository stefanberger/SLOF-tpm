/******************************************************************************
 * Copyright (c) 2015 IBM Corporation
 * All rights reserved.
 * This program and the accompanying materials
 * are made available under the terms of the BSD License
 * which accompanies this distribution, and is available at
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * Contributors:
 *     IBM Corporation - initial implementation
 *****************************************************************************/
/*
 * libtpm bindings for SLOF - implementation
 */

#include <tcgbios.h>


/************************************************/
/* Startup TPM code                             */
/* SLOF:   tpm-start  ( -- errcode )            */
/* LIBTPM: tpm_start(void)                      */
/************************************************/
PRIM(tpm_X2d_start)
	PUSH;
	TOS.n = tpm_start();
MIRP

/************************************************/
/* Shutdown TPM layer before OS takes over      */
/* SLOF:   tpm-finalize  ( -- )                 */
/* LIBTPM: tpm_finalize(void)                   */
/************************************************/
PRIM(tpm_X2d_finalize)
	tpm_finalize();
MIRP

/***************************************************************/
/* Prepare TPM state for bootloader                            */
/* SLOF:   tpm-unassert-physical-presence ( -- errcode )       */
/* LIBTPM: tpm_unassert_physical-presence(void)                */
/***************************************************************/
PRIM(tpm_X2d_unassert_X2d_physical_X2d_presence)
	PUSH;
	TOS.n = tpm_unassert_physical_presence();
MIRP

/*************************************************************/
/* Convey log address and size                               */
/* SLOF:   tpm-set-log-parameters  ( addr size -- )          */
/* LIBTPM: tpm_set_log_parameters(void *addr, uint64_t size) */
/*************************************************************/
PRIM(tpm_X2d_set_X2d_log_X2d_parameters)
	int size = TOS.u; POP;
	void *addr = TOS.a; POP;
	tpm_set_log_parameters(addr, size);
MIRP

/**************************************************/
/* Firmware API                                   */
/* SLOF:   tpm-log-event ( eventptr -- success? ) */
/* LIBTPM: success = tpm-log-event                */
/**************************************************/
PRIM(tpm_X2d_log_X2d_event)
	void *eventptr = TOS.a;
	TOS.n = tpm_log_event(eventptr);
MIRP

/********************************************************/
/* Firmware API                                         */
/* SLOF:   tpm-hash-log-extend-event ( eventptr -- rc ) */
/* LIBTPM: errcode = tpm-hash-log-extend-event          */
/********************************************************/
PRIM(tpm_X2d_hash_X2d_log_X2d_extend_X2d_event)
	void *eventptr = TOS.a;
	TOS.n = tpm_hash_log_extend_event(eventptr);
MIRP

/*****************************************************************/
/* Firmware API                                                  */
/* SLOF:   tpm-hash-all ( data-ptr data-len hash-ptr -- errcode) */
/* LIBTPM: errcode = tpm-hash-all                                */
/*****************************************************************/
PRIM(tpm_X2d_hash_X2d_all)
	void *hashptr = TOS.a; POP;
	int datalen = TOS.n; POP;
	void *dataptr = TOS.a;
	TOS.n = tpm_hash_all(dataptr, datalen, hashptr);
MIRP
